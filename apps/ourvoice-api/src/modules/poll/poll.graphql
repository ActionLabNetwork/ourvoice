type Query {
  availablePolls(userHash: String!): [Poll!]!
  pollsWithResult(moderatorHash: String!): [PollWithResult!]!
}

type Mutation {
  createPoll(data: PollCreateInput!): Poll
  updatePoll(pollId: Int!, data: PollUpdateInput!): Poll
  votePoll(voteInput: VoteInput): VoteResponse
}

type Poll {
  id: Int!
  question: String!
  published: Boolean!
  active: Boolean!
  postLink: String
  weight: Int!
  createdAt: DateTime!
  expiresAt: DateTime
  options: [PollOption!]!
}

type PollOption {
  id: Int!
  option: String!
}

type PollWithResult {
  id: Int!
  question: String!
  published: Boolean!
  active: Boolean!
  postLink: String
  weight: Int!
  createdAt: DateTime!
  expiresAt: DateTime
  options: [PollOptionWithResult!]!
}

type PollOptionWithResult {
  id: Int!
  option: String!
  numVotes: Int!
}

input PollCreateInput {
  published: Boolean!
  active: Boolean!
  postLink: String
  weight: Int!
  expiresAt: DateTime
  question: String!
  options: [PollOptionCreateInput!]!
}

input PollUpdateInput {
  published: Boolean
  active: Boolean
  postLink: String
  weight: Int
  expiresAt: DateTime
  question: String
  options: [PollOptionCreateInput!]
}

input PollOptionCreateInput {
  option: String!
}

input VoteInput {
  voterHash: String!
  pollId: Int!
  optionId: Int!
}

type VoteResponse {
  pollId: Int!
  optionId: Int!
  stats: [PollOptionStat!]
}

type PollOptionStat {
  optionId: Int!
  proportion: Float!
}
