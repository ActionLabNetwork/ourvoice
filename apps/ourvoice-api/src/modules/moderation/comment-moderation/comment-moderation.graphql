type Query {
  moderationComment(id: Int!): ModerationComment
  moderationComments(
    filter: ModerationCommentsFilterInput
    pagination: ModerationCommentPaginationInput
  ): ModerationCommentConnection
}

type ModerationComment {
  id: ID!
  content: String!
  status: ModerationPostStatus!
  version: Int!
  timestamp: String!
  latest: Boolean!
  moderators: [CommentModeration]
  authorHash: String!
  post: ModerationPost
  parentId: Int
  parent: ModerationComment
  children: [ModerationComment]
}

type CommentModeration {
  comment: ModerationComment!
  moderatorHash: String!
  decision: ModerationDecision!
  reason: String
  timestamp: String!
}

enum ModerationDecision {
  ACCEPTED
  REJECTED
}

enum ModerationPostStatus {
  PENDING
  APPROVED
  REJECTED
}

input ModerationCommentsFilterInput {
  content: String
  status: ModerationPostStatus
  authorHash: String
  postId: Int
  parentId: Int
}

input ModerationCommentPaginationInput {
  cursor: String
  limit: Int
}

type ModerationCommentEdge {
  node: ModerationComment!
  cursor: String!
}

type ModerationCommentConnection {
  totalCount: Int
  pageInfo: ModerationCommentPageInfo!
  edges: [ModerationCommentEdge]
}

type ModerationCommentPageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
}
