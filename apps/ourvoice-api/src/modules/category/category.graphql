type Query {
  category(id: Int!): Category
  categories(
    filter: CategoriesFilterInput
    pagination: CategoryPaginationInput
  ): CategoryConnection
}

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(id: Int!, data: CategoryUpdateInput!): Category!
  deleteCategory(id: Int!): Category!
}

type Category {
  id: Int!
  name: String!
  description: String
  weight: Int!
  active: Boolean!
  createdAt: DateTime
  disabledAt: DateTime
  parent: Category
  children: [Category!]
  posts: [Post!]
  numPosts: Int!
}

input CategoryCreateInput {
  name: String!
  description: String
  parentId: Int
}

input CategoryUpdateInput {
  name: String
  description: String
  parentId: Int
}

input CategoriesFilterInput {
  ids: [Int]
  name: String
  description: String
  weight: Int
  active: Boolean
  parentId: Int
  createdAfter: DateTime
  createdBefore: DateTime
  disabledAfter: DateTime
  disabledBefore: DateTime
}

input CategoryPaginationInput {
  cursor: String
  limit: Int
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

type CategoryConnection {
  pageInfo: CategoryPageInfo!
  edges: [CategoryEdge!]!
}

type CategoryPageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
}
