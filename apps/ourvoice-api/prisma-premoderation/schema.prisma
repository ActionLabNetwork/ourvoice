// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator premoderationClient {
  provider = "prisma-client-js"
  output   = "../node_modules/@internal/prisma/client"
}

datasource premoderation {
  provider = "postgresql"
  url      = env("DATABASE_PREMODERATION_URL")
}

model Post {
  id         Int    @id @default(autoincrement())
  title      String
  content    String
  files      Json?
  identifier String
  sequence   Int    @default(0)

  // Moderation
  status     PostStatus       @default(PENDING)
  version    Int              @default(0)
  timestamp  DateTime         @default(now())
  latest     Boolean          @default(true)
  moderators PostModeration[]

  // Relations
  categoryIds Int[]
  comments    Comment[]
  authorHash  String
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String

  // Moderation
  status     PostStatus          @default(PENDING)
  version    Int                 @default(0)
  timestamp  DateTime            @default(now())
  latest     Boolean             @default(true)
  moderators CommentModeration[]

  // Relations
  authorHash String
  post       Post?     @relation(fields: [postId], references: [id])
  postId     Int?
  parentId   Int?
  parent     Comment?  @relation("CommentToComment", fields: [parentId], references: [id])
  children   Comment[] @relation("CommentToComment")
}

model PostModeration {
  postId          Int
  post            Post     @relation(fields: [postId], references: [id])
  moderatorHash   String
  decision        Decision
  reason          String?
  timestamp       DateTime @default(now())
  modifiedTitle   String?
  modifiedContent String?

  @@id([postId, moderatorHash])
}

model CommentModeration {
  commentId       Int
  comment         Comment  @relation(fields: [commentId], references: [id])
  moderatorHash   String
  decision        Decision
  reason          String?
  timestamp       DateTime @default(now())
  modifiedTitle   String?
  modifiedContent String?

  @@id([commentId, moderatorHash])
}

enum Decision {
  ACCEPTED
  REJECTED
}

enum PostStatus {
  PENDING
  APPROVED
  REJECTED
}
